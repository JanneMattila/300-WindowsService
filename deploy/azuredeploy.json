{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "storageAccountNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS Name for the Storage Account where the Virtual Machine's disks will be placed."
      }
    },
    "storageAccountType": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS Name for the Storage Account where the Virtual Machine's disks will be placed."
      }
    },
    "virtualMachineName": {
      "type": "string",
      "minLength": 1
    },
    "adminUsername": {
      "type": "string",
      "minLength": 1
    },
    "virtualMachinePublicIpDnsNamePrefix": {
      "type": "string",
      "minLength": 1
    },
    "adminPassword": {
      "type": "securestring"
    },
    "dscLocation": {
      "type": "string",
      "metadata": {
        "description": "Auto-generated container in staging storage account to receive post-build staging folder upload"
      }
    },
    "dscLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "Auto-generated token to access dscLocation"
      }
    },
    "applicationPackage": {
      "type": "string",
      "metadata": {
        "description": "Url to application package including Sas token"
      }
    },
    "virtualMachineSku": {
      "type": "string",
      "defaultValue": "2016-Datacenter",
      "metadata": {
        "description": "Windows Server OS version to deploy"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[concat(parameters('storageAccountNamePrefix'), uniqueString(resourceGroup().id))]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[parameters('storageAccountType')]"
      }
    },
    {
      "name": "virtualNetwork",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [],
      "tags": {
        "displayName": "virtualNetwork"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('virtualNetworkPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('virtualNetworkSubnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('virtualNetworkSubnet1Prefix')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('virtualMachineName'),'/', variables('extensionName'))]",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('virtualMachineName'))]"
      ],
      "tags": {
        "displayName": "DSCExt1"
      },
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.20",
        "autoUpgradeMinorVersion": true,
        "forceUpdateTag": "1.0",
        "settings": {
          "configuration": {
            "url": "[parameters('dscLocation')]",
            "script": "dscExtension.ps1",
            "function": "DeployLOBApplication"
          },
          "configurationArguments": {
            "nodeName": "[parameters('virtualMachineName')]"
          }
        },
        "protectedSettings": {
          "configurationUrlSasToken": "[parameters('dscLocationSasToken')]",
          "configurationArguments": {
            "applicationPackage": "[parameters('applicationPackage')]"
          }
        }
      }
    },
    {
      "name": "[variables('virtualMachineNicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', 'virtualNetwork')]",
        "[concat('Microsoft.Network/publicIPAddresses/', variables('virtualMachinePublicIpName'))]"
      ],
      "tags": {
        "displayName": "virtualMachineNic"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('virtualMachineSubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('virtualMachinePublicIpName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('virtualMachineName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', concat(parameters('storageAccountNamePrefix'), uniqueString(resourceGroup().id)))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('virtualMachineNicName'))]"
      ],
      "tags": {
        "displayName": "virtualMachine"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('virtualMachineVmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('virtualMachineName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "provisionVmAgent": "true"
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('virtualMachineImagePublisher')]",
            "offer": "[variables('virtualMachineImageOffer')]",
            "sku": "[parameters('virtualMachineSku')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "virtualMachineOSDisk",
            "vhd": {
              "uri": "[concat('http://', concat(parameters('storageAccountNamePrefix'), uniqueString(resourceGroup().id)), '.blob.core.windows.net/', variables('virtualMachineStorageAccountContainerName'), '/', variables('virtualMachineOSDiskName'), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('virtualMachineNicName'))]"
            }
          ]
        }
      }
    },
    {
      "name": "[variables('virtualMachinePublicIpName')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [],
      "tags": {
        "displayName": "virtualMachinePublicIp"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[concat(parameters('virtualMachinePublicIpDnsNamePrefix'), uniqueString(resourceGroup().id))]"
        }
      }
    }
  ],
  "variables": {
    "virtualNetworkPrefix": "10.0.0.0/16",
    "virtualNetworkSubnet1Name": "Subnet-1",
    "virtualNetworkSubnet1Prefix": "10.0.0.0/24",
    "virtualMachineImagePublisher": "MicrosoftWindowsServer",
    "virtualMachineImageOffer": "WindowsServer",
    "virtualMachineOSDiskName": "virtualMachineOSDisk",
    "virtualMachineVmSize": "Standard_D1",
    "virtualMachineVnetID": "[resourceId('Microsoft.Network/virtualNetworks', 'virtualNetwork')]",
    "virtualMachineSubnetRef": "[concat(variables('virtualMachineVnetID'), '/subnets/', variables('virtualNetworkSubnet1Name'))]",
    "virtualMachineStorageAccountContainerName": "vhds",
    "virtualMachineNicName": "[concat(parameters('virtualMachineName'), 'NetworkInterface')]",
    "extensionName": "DscExtension",
    "virtualMachinePublicIpName": "virtualMachinePublicIp"
  },
  "outputs": {
    "fqdn": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('virtualMachinePublicIpName'))).dnsSettings.fqdn]"
    }
  }
}
